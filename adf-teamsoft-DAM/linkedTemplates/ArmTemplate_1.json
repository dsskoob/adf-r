{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-teamsoft-DAM"
		},
		"LS_SQL_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"LS_SQL\""
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHintegrationRuntime01",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_AdventureWorks_Grupo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_ObtenerTablasIngesta",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT\nNombreEsquema,\nNombreTabla\nFROM intg.TablasIngesta\nWHERE Grupo = ''', pipeline().parameters.Grupo,\n''' AND Estado = 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL_Integracion_TablaIngesta",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_CopiarTablasIngesta",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LK_ObtenerTablasIngesta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LK_ObtenerTablasIngesta').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CD_DATA_SQL_to_ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM ', item().NombreEsquema, '.', item().NombreTabla)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASQL_AdventureWorkd_Data",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ADLS_AdventureWorks_Data",
											"type": "DatasetReference",
											"parameters": {
												"Ruta": {
													"value": "@concat(item().NombreEsquema, '\\', item().NombreTabla)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Grupo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Módulo 5"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-24T16:38:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_Paciente')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "codigo_paciente",
						"type": "char"
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "edad",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "consultas",
					"table": "paciente"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_CLEAN_ResumenMovies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_Movies",
								"type": "DatasetReference"
							},
							"name": "MoviesADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_ADLS_CSV_Movies",
								"type": "DatasetReference"
							},
							"name": "ResumenMovies"
						}
					],
					"transformations": [
						{
							"name": "SelectMovies"
						},
						{
							"name": "FilterMovies1951"
						},
						{
							"name": "GeneroPrimario"
						},
						{
							"name": "RankingRating"
						},
						{
							"name": "AggregateRankings"
						},
						{
							"name": "UpsertTrue"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie as integer,",
						"          title as string,",
						"          genres as string,",
						"          year as short,",
						"          Rating as short,",
						"          RottenTomato as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MoviesADLS",
						"MoviesADLS select(mapColumn(",
						"          {película} = movie,",
						"          {título} = title,",
						"          {géneros} = genres,",
						"          {año} = year,",
						"          RottenTomatoes = RottenTomato",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectMovies",
						"SelectMovies filter({año}>1950) ~> FilterMovies1951",
						"FilterMovies1951 derive({GéneroPrimario} = iif(locate('|', {géneros})>1, left({géneros}, locate('|', {géneros})-1), {géneros})) ~> GeneroPrimario",
						"GeneroPrimario window(over({GéneroPrimario},",
						"          {año}),",
						"     desc(RottenTomatoes, true),",
						"     RankingRatings = rank()) ~> RankingRating",
						"RankingRating aggregate(groupBy({GéneroPrimario},",
						"          {año}),",
						"     RatingPromedio = avg(RottenTomatoes),",
						"          MejorRating = first({título}),",
						"          PeorRating = last({título}),",
						"          NroPeliculas = count()) ~> AggregateRankings",
						"AggregateRankings alterRow(upsertIf(true())) ~> UpsertTrue",
						"UpsertTrue sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['ResumenMovies_DAM.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ResumenMovies"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PQ_CLEAN_Departamento')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "DS_ADLS_XLS_Departamento",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DS_ADLS_XLS_Departamento",
							"dataset": {
								"referenceName": "DS_ADLS_XLS_Departamento",
								"type": "DatasetReference"
							}
						},
						{
							"name": "DS_ADLS_XLS_Zona",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DS_ADLS_XLS_Zona",
							"dataset": {
								"referenceName": "DS_ADLS_XLS_Zona",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared DS_ADLS_XLS_Departamento = let AdfDoc = AzureStorage.DataLakeContents(\"https://dblacademyadls.dfs.core.windows.net/1-bronce/Maestros.xlsx\"), Excel = Excel.Workbook(AdfDoc),ExcelSheet = Excel{[Item=\"Hoja1\",Kind=\"Sheet\"]}[Data], PromotedHeaders = Table.PromoteHeaders(ExcelSheet, [PromoteAllScalars = true]) in PromotedHeaders;\r\nshared DS_ADLS_XLS_Zona = let AdfDoc = AzureStorage.DataLakeContents(\"https://dblacademyadls.dfs.core.windows.net/1-bronce/Maestros.xlsx\"), Excel = Excel.Workbook(AdfDoc),ExcelSheet = Excel{[Item=\"Hoja3\",Kind=\"Sheet\"]}[Data], PromotedHeaders = Table.PromoteHeaders(ExcelSheet, [PromoteAllScalars = true]) in PromotedHeaders;\r\nshared UserQuery = let Source = #\"DS_ADLS_XLS_Departamento\",\r\n  #\"Columnas quitadas\" = Table.RemoveColumns(Source, {\"CodigoDepartamento\", \"DepartamentoPais\"}),\r\n  #\"Consultas combinadas\" = Table.NestedJoin(#\"Columnas quitadas\", {\"ZonaID\"}, DS_ADLS_XLS_Zona, {\"ZonaID\"}, \"DS_ADLS_XLS_Zona\", JoinKind.LeftOuter),\r\n  #\"DS_ADLS_XLS_Zona expandido\" = Table.ExpandTableColumn(#\"Consultas combinadas\", \"DS_ADLS_XLS_Zona\", {\"Zona\"}, {\"Zona\"}),\r\n  #\"Tipo de columna cambiado\" = Table.TransformColumnTypes(#\"DS_ADLS_XLS_Zona expandido\", {{\"ZonaID\", Int64.Type}, {\"DepartamentoID\", Int64.Type}}) in #\"Tipo de columna cambiado\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateCustomerDimension')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Módulo 4"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CustomerSource",
								"type": "DatasetReference"
							},
							"name": "SourceDB"
						},
						{
							"dataset": {
								"referenceName": "DimCustomer",
								"type": "DatasetReference"
							},
							"name": "DimCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimCustomer",
								"type": "DatasetReference"
							},
							"name": "SinkDimCustomer"
						}
					],
					"transformations": [
						{
							"name": "CreateCustomerHash"
						},
						{
							"name": "ExistsHash"
						},
						{
							"name": "LookupCustomerID"
						},
						{
							"name": "SetDates"
						},
						{
							"name": "AllowUpserts"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SourceDB",
						"source(output(",
						"          CustomerID as integer,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          InsertedDate as timestamp,",
						"          ModifiedDate as timestamp,",
						"          HashKey as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimCustomer",
						"SourceDB derive(HashKey = sha2(256, iifNull(Title,'') +FirstName +iifNull(MiddleName,'') +LastName +iifNull(Suffix,'') +iifNull(CompanyName,'') +iifNull(SalesPerson,'') +iifNull(EmailAddress,'') +iifNull(Phone,''))) ~> CreateCustomerHash",
						"CreateCustomerHash, DimCustomer exists(CreateCustomerHash@HashKey == DimCustomer@HashKey,",
						"     negate:true,",
						"     broadcast: 'auto')~> ExistsHash",
						"ExistsHash, DimCustomer lookup(SourceDB@CustomerID == DimCustomer@CustomerID,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookupCustomerID",
						"LookupCustomerID derive(InsertedDate = iif(isNull(InsertedDate), currentTimestamp(), InsertedDate),",
						"          ModifiedDate = currentTimestamp()) ~> SetDates",
						"SetDates alterRow(upsertIf(true())) ~> AllowUpserts",
						"AllowUpserts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustomerID as integer,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          InsertedDate as timestamp,",
						"          ModifiedDate as timestamp,",
						"          HashKey as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CustomerID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustomerID = SourceDB@CustomerID,",
						"          Title = SourceDB@Title,",
						"          FirstName = SourceDB@FirstName,",
						"          MiddleName = SourceDB@MiddleName,",
						"          LastName = SourceDB@LastName,",
						"          Suffix = SourceDB@Suffix,",
						"          CompanyName = SourceDB@CompanyName,",
						"          SalesPerson = SourceDB@SalesPerson,",
						"          EmailAddress = SourceDB@EmailAddress,",
						"          Phone = SourceDB@Phone,",
						"          InsertedDate,",
						"          ModifiedDate,",
						"          HashKey = CreateCustomerHash@HashKey",
						"     )) ~> SinkDimCustomer"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CLEAN_Departamento')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Limpieza Departamento ADLS to PQ",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PQ_CLEAN_Departamento",
								"type": "DataFlowReference",
								"datasetParameters": {
									"DS_ADLS_XLS_Departamento": {},
									"DS_ADLS_XLS_Zona": {},
									"UserQueryDSADLSParquetDepartamento": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryDSADLSParquetDepartamento",
											"dataset": {
												"referenceName": "DS_ADLS_Parquet_Departamento",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryDSADLSParquetDepartamento"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Módulo 3"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-20T00:14:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PQ_CLEAN_Departamento')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_S3_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingesta Movies de S3 a ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_S3_Movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Limpieza y resumen de Movies - ADLS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Ingesta Movies de S3 a ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_CLEAN_ResumenMovies",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MoviesADLS": {},
									"ResumenMovies": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Módulo 2"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-17T17:20:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_CLEAN_ResumenMovies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_SQL_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_Paciente",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Pacientes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Módulo 2"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-17T15:16:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_Paciente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_AdventureWorks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_LOAD_Prod_Mst",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOAD_AdventureWorks_Grupo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Grupo": "Produccion-Mst"
							}
						}
					},
					{
						"name": "PL_LOAD_Prod_Trn",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_LOAD_Prod_Mst",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOAD_AdventureWorks_Grupo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Grupo": "Produccion-Trn"
							}
						}
					},
					{
						"name": "PL_LOAD_Vta_Mst",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOAD_AdventureWorks_Grupo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Grupo": "Venta-Mst"
							}
						}
					},
					{
						"name": "PL_LOAD_Vta_Trn",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_LOAD_Vta_Mst",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_LOAD_AdventureWorks_Grupo",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Grupo": "Venta-Trn"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Módulo 5"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-24T16:38:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_LOAD_AdventureWorks_Grupo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_LOAD_DimCustomer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cargar DimCustomer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateCustomerDimension",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceDB": {},
									"DimCustomer": {},
									"SinkDimCustomer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Módulo 4"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-22T00:35:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateCustomerDimension')]"
			]
		}
	]
}